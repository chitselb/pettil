; cbm_all.i65

; All Commodore 8-bit
; common to all Commodore 8-bits
; graphic and control character set
#define INSERT      $94
#define DELETE      $14
#define SPACE       $20
#define CR          $0D
#define CLR         $93
#define HOME        $13
#define CRSRDOWN    $11
#define CRSRUP      $91
#define CRSRRIGHT   $1D
#define CRSRLEFT    $9D
#define RVSON       $12
#define RVSOFF      $92
#define STOPKEY     $03
#define RUNKEY      $83
#define QUOTE       $22
#define VBAR2       $B4
#define VBAR3       $B5
#define VBAR6       $B6
#define VBAR7       $AA
#define HBAR2       $B7
#define HBAR3       $B8
#define HBAR5       $B9
#define HBAR6       $AF
#define VLINE1      $A5
#define VLINE2      $D4
#define VLINE3      $C7
#define VLINE4      $C2
#define VLINE5      $DD
#define VLINE6      $C8
#define VLINE7      $D9
#define VLINE8      $A7
#define HLINE1      $A3
#define HLINE2      $C5
#define HLINE3      $C4
#define HLINE4      $C3
#define HLINE5      $C0
#define HLINE6      $C6
#define HLINE7      $D2
#define HLINE8      $A4
#define SHADE       $A6
#define HSHADE      $A8
#define VSHADE      $DC
#define TRIUL       $A9
#define TRIUR       $DF
#define TRILR       $E9
#define WEDGESE     $E9
#define WEDGENW     $A9
#define WEDGESE     $E9
#define WEDGESE     $E9
#define CORNERUL    $B0
#define CORNERUR    $AE
#define CORNERLL    $AD
#define CORNERLR    $BD
#define ROUNDUL     $D5
#define ROUNDUR     $C9
#define ROUNDLL     $CA
#define ROUNDLR     $CB
#define BOXUL       $CF
#define BOXUR       $D0
#define BOXLL       $CC
#define BOXLR       $BA
#define BLOCK0      $A0
#define BLOCK1      $BE
#define BLOCK2      $BC
#define BLOCK4      $BB
#define BLOCK8      $AC
#define BLOCK9      $BF
#define TEEUP       $B1
#define TEEDN       $B2
#define TEELF       $B3
#define TEERT       $AB
#define CROSS       $DB
#define DIAG        $CE
#define BACKDIAG    $CD
#define DOUBLEDIAG  $D6
#define SPADE       $C1
#define HEART       $D3
#define DIAMOND     $DA
#define CLUB        $D8
#define CIRCLEFILL  $D1
#define CIRCLEEMPTY $D7
#define PI          $DE

; kernel(PET) kernal(VIC-20, C=64)
; Set input device
#define CHKIN       $FFC6
; Set output device
#define CHKOUT      $FFC9
; Restore default I/0 devices
#define CLRCHN      $FFCC
; Input character
#define CHRIN       $FFCF
; Output character
#define CHROUT      $FFD2
#define LOAD        $FFD5
#define SAVE        $FFD8
; SETTIM was VERIFY in original ROM
#define SETTIM      $FFDB
; RDTIM was SYS in original ROM
#define RDTIM       $FFDE
; Get character, usually from keyboard
#define GETIN       $FFE4
; Close all open files and I/O channels
#define CLALL       $FFE7
; update jiffy clock
#define UDTIM       $FFEA
; 6502 vectors
#define NMI         $FFFA
#define RES         $FFFC
#define IRQ         $FFFE
