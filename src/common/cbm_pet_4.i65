; cbm_pet_4.i65
;#echo .       cbm_pet_4.i65

;#define ABEND                   $FFC1
#define ABEND                   $B09B

								; Open Space in Memory
;#define BLTU		$B350
								; call entry to monitor
#define TIMCALL 	$D472
								; BRK call to monitor
#define TIMBRK      $D478
								; output a CARRIAGE return
#define CROUT			        $D534
								; factory IRQ vector for ($0090)
#define MAINIRQ     			$E455

#define DORTI					$E600
								;"http://wiki.nesdev.com/w/index.php/6502_assembly_optimisations#Test_bits_without_destroying_the_accumulator
								; opcode $40, bit $e605 will test smudge (bit4)
#define RTI_INSTR	$E605
								; set character at cursor position
#define DSPP    	$E606
								; Table of 25 low bytes marking the end of each line (multiples of 40)
								; varies from "Programming the Commodore PET" p.428
								; table of low bytes for line wrap
#define GETSTOP     $F335
								; low-level tape i/o entry points
								; (load/verify) rest of program
#define READDATA    $F3F8
								; (load/verify) named header - search for a named tape header block
#define READHEAD	$F4D3
								; print OK
#define PRINTOK		$F508
								; (save) program to disk or tape
#define SAVEPRG     $F6E0
								; write file header
#define SAVEHEAD    $F619
								; copy tape buffer start/end to SAL(c7) / EAL(c9) / STAL(fb)
#define SETEALSTAL  $F66E
								; copy tape buffer start/end to SAL(c7) / EAL(c9) / STAL(fb)
#define TAPEPTR     $F67B
								; copy tape buffer start SAL (c7) to STAL(fb)
#define SETSTAL     $F68C
								; copy cassette buffer addresses to STAL/EAL
#define SETCASBUF   $F6AB
								; write arbitrary data to tape
#define SAVEDATA    $F8CE
								; BASIC 4.0 DOS
#define CONCAT      $FF93
#define DOPEN       $FF96
#define DCLOSE      $FF99
#define RECORD      $FF9C
#define HEADER 		$FF9F
#define COLLECT     $FFA2
#define BACKUP      $FFA5
#define COPY        $FFA8
#define APPEND      $FFAB
#define DSAVE       $FFAE
#define DLOAD       $FFB1
#define DIRECTORY   $FFB4
#define RENAME      $FFB7
#define SCRATCH     $FFBA
#define UNKNOWN     $FFBD

