; cbm_pet.i65
;#echo .       cbm_pet.i65


#define BASIC                   $0401
; Cassette 1 tape buffer (192 bytes)
#define CAS1BUF     $027A
; Cassette 2 tape buffer (192 bytes)
#define CAS2BUF     $033A
; 40-column PET end of screen
#define EOSCR 		$83E8

; see "Programming The PET/CBM" p. 384
; Peripheral Interface Adapter 1 E810..E813
#define PIA1        $E810
#define PIA1PORTA   PIA1+$00
#define PIA1CRA     PIA1+$01
#define PIA1PORTB   PIA1+$02
#define PIA1CRB     PIA1+$03
; Peripheral Interface Adapter 2 E820..E823
#define PIA2        $E820
#define PIA2PORTA   PIA2+$00
#define PIA2CRA     PIA2+$01
#define PIA2PORTB   PIA2+$02
#define PIA2CRB     PIA2+$03
; Versatile Interface Adapter 	 E840..E84F
#define VIA         $E840
#define VIAORB      VIA+$00
#define VIAORA      VIA+$01
#define VIAPDRB     VIA+$02
#define VIADDRA     VIA+$03
#define VIAT1LW     VIA+$04
#define VIAT1CH     VIA+$05
#define VIAT1LL     VIA+$06
#define VIAT1LH     VIA+$07
#define VIAT2LW     VIA+$08
#define VIAT2CH     VIA+$09
#define VIASR       VIA+$0A
#define VIAACR      VIA+$0B
#define VIAPCR      VIA+$0C
#define VIAIFR      VIA+$0D
#define VIAIER      VIA+$0E
#define VIAORAN     VIA+$0F
#define LPERSCR     25
#define VIDRAM 		$8000
#define BPERSCR 	1000

; System input buffer 0200-0250
; line buffer for TIB
#define BUF         $0200
; Real-Time Jiffy Clock (approx) 1/60 Sec, lowest kernel address
#define TIME        $8D
; ..d7 pointer - start of tape buffer (027A or 033A)
#define TAPE1       $D6
; 25-byte screen wrap table
#define LDTB1       $E0
; file name address
#define FNADR       $DA
; Length of Current File Name
#define FNLEN       $D1
;"Vector: Hardware Interrupt [3: E62E, 4: E455]
#define CINV        $90
;"Vector: BRK Instr. Interrupt [3: FD17, 4: D478]
#define CBINV       $92
;"Vector: Non-Maskable Interrupt [3:C389,4: B3FF]
#define NMINV       $94
; Current Key Pressed 255 = No Key
#define LSTX        $97
;"labels mostly from http://zimmers.net/cbmpics/cbm/PETx/petmem.txt
;"Pointer: Highest Address Used by  BASIC
; Pointer to highest address used by BASIC (top of RAM)
#define MEMSIZ      $34
; Kernel I/O Status byte (ST)
#define STATUS      $96
; Flag 0 = Load, 1 = Verify (Kernel & BASIC)
#define VERCK       $9D
; Default Input Device (0)
#define DFLTN       $AF
; Default Output Device (3)
#define DFLTO       $B0
; Tape buffer leading character (eg 1=PRG 2=DATA 3= 4=SEQ 5=EOT)
#define TAPEID      $B4
; pointer current screen line address
#define PNT         $C4
; Cursor Column on Current Line
#define PNTR        $C6
; Quote flag, 0=direct cursor, else printable ctrl chars
#define QTSW        $CD
; Length of current line (39 or 79)
#define LNMX        $D5
; Current Cursor Physical Line Number
#define TBLX        $D8
; number of keyboard inserts outstanding
#define KBINS       $DC
