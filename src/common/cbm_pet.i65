; cbm_pet.i65
;#echo .       cbm_pet.i65


;zero page map for non-original PET
                                ; Temporary storage for FLPT value.
;#define TEMPF1      $54
                                ; part of CHRGET, whether to inhibit or display system messages
#define             $78
                                ; flag - print shifted chars.
#define SDFX        $98
                                ;"Flag: STOP key / RVS key
#define STKEY       $9B
                                ; No. of Chars. in keyboard Buffer (Queue)
#define NDX         $9E
                                ; Pointer End of Logical Line for INPUT
#define INDX        $A1
                                ; Key Image
#define KEYIMG      $A6
                                ; Cursor blink enable 0=flash cursor
#define BLNSW       $A7
                                ; Timer countdown to toggle cursor
#define BLNCT       $A8
                                ; True character under cursor
#define GDBLN       $A9
                                ; Flag - last cursor blink on/off
#define BLNON       $AA
                                ; Flag INPUT or GET from Keyboard
#define CRSW        $AC
                                ; No. of Open Files / Index to File Table
#define LDTND       $AE
                                ; Cassette Write/Sync Countdown (64=00A5)
#define CNTDN       $BA
                                ; "Pointer: Tape I/O Buffer #1 (00-C0)
#define BUFPNT      $BB
                                ; $bc  "Pointer: Tape I/O Buffer #2 (00-C0)
                                ; "Cassette Short Cnt (64=00AB): counter of seconds before tape write / checksum
#define RIPRTY      $C3
                                ; pointer - tape buffer/screen scrolling
#define SAL         $C7
                                ; Tape End Addresses/End of Program
#define EAL         $C9
                                ; Current Logical File Number
#define LA          $D2
                                ; Current Secondary Address
#define SA          $D3
                                ; First Address (current device number)
#define FA          $D4
                                ; Current Character to Print
#define DATAX       $D9
                                ; counter to speed ti by 6/5
#define TI65SPEED   $F8
                                ; cassette tape motor interlock #1
#define CAS1        $F9
                                ; cassette tape motor interlock #2
#define CAS2        $FA
                                ; I/O Start Address
#define STAL        $FB
                                ; Keyboard Buffer Queue (FIFO)
#define KEYD        $026F

#define BASIC                   $0401
#define SW16LOAD                $04A6
; Cassette 1 tape buffer (192 bytes)
#define CAS1BUF     $027A
; Cassette 2 tape buffer (192 bytes)
#define CAS2BUF     $033A

; see "Programming The PET/CBM" p. 384
; Peripheral Interface Adapter 1 E810..E813
#define PIA1        $E810
#define PIA1PORTA   PIA1+$00
#define PIA1CRA     PIA1+$01
#define PIA1PORTB   PIA1+$02
#define PIA1CRB     PIA1+$03
; Peripheral Interface Adapter 2 E820..E823
#define PIA2        $E820
#define PIA2PORTA   PIA2+$00
#define PIA2CRA     PIA2+$01
#define PIA2PORTB   PIA2+$02
#define PIA2CRB     PIA2+$03
; Versatile Interface Adapter 	 E840..E84F
#define VIA         $E840
#define VIAORB      VIA+$00
#define VIAORA      VIA+$01
#define VIAPDRB     VIA+$02
#define VIADDRA     VIA+$03
#define VIAT1LW     VIA+$04
#define VIAT1CH     VIA+$05
#define VIAT1LL     VIA+$06
#define VIAT1LH     VIA+$07
#define VIAT2LW     VIA+$08
#define VIAT2CH     VIA+$09
#define VIASR       VIA+$0A
#define VIAACR      VIA+$0B
#define VIAPCR      VIA+$0C
#define VIAIFR      VIA+$0D
#define VIAIER      VIA+$0E
#define VIAORAN     VIA+$0F
#define LPERSCR     25
#define VIDRAM 		$8000
#define BPERSCR 	1000

; System input buffer 0200-0250
; line buffer for TIB
#define BUF         $0200
; Real-Time Jiffy Clock (approx) 1/60 Sec, lowest kernel address
#define TIME        $8D
; ..d7 pointer - start of tape buffer (027A or 033A)
#define TAPE1       $D6
; 25-byte screen wrap table
#define LDTB1       $E0
; file name address
#define FNADR       $DA
; Length of Current File Name
#define FNLEN       $D1
;"Vector: Hardware Interrupt [3: E62E, 4: E455]
#define CINV        $90
;"Vector: BRK Instr. Interrupt [3: FD17, 4: D478]
#define CBINV       $92
;"Vector: Non-Maskable Interrupt [3:C389,4: B3FF]
#define NMINV       $94
; Current Key Pressed 255 = No Key
#define LSTX        $97
;"labels mostly from http://zimmers.net/cbmpics/cbm/PETx/petmem.txt
;"Pointer: Highest Address Used by  BASIC
; Pointer to highest address used by BASIC (top of RAM)
#define MEMSIZ      $34
; Kernel I/O Status byte (ST)
#define STATUS      $96
; Flag 0 = Load, 1 = Verify (Kernel & BASIC)
#define VERCK       $9D
; Default Input Device (0)
#define DFLTN       $AF
; Default Output Device (3)
#define DFLTO       $B0
; Tape buffer leading character (eg 1=PRG 2=DATA 3= 4=SEQ 5=EOT)
#define TAPEID      $B4
; pointer current screen line address
#define PNT         $C4
; Cursor Column on Current Line
#define PNTR        $C6
; Quote flag, 0=direct cursor, else printable ctrl chars
#define QTSW        $CD
; Length of current line (39 or 79)
#define LNMX        $D5
; Current Cursor Physical Line Number
#define TBLX        $D8
; number of keyboard inserts outstanding
#define KBINS       $DC
