; pettil-tdd.a65
;#echo .       pettil-tdd.a65
;#echo .       PETTIL test-driven development harness

;--------------------------------------------------------------
#if 0
name=TDD
stack=( -- )
tags=system,startup,secondary,tdd

#endif
#include "align.i65"
_tdd
    jsr enter
#include "page.i65"
    .word _info                     ; some entertainment
#include "page.i65"
    .word cr
#include "page.i65"
    .word _tdd01
#include "page.i65"
    .word _tdd02
#include "page.i65"
    .word _tdd03
#include "page.i65"
;    .word xyzzy
#include "page.i65"
    .word pseequewrapper
#include "page.i65"
;    .word xyzzy
#include "parm.i65"
    .word _pdq
    .byt (tddx-*-1)
    .asc CIRCLEFILL, SPACE, RVSON,"TDD",RVSOFF," PASS!"
tddx
#include "pad.i65"
    .word _info
#include "past.i65"
    .word exit

;--------------------------------------------------------------
tddata
    .asc 2,"0="

;--------------------------------------------------------------
#include "align.i65"
_tdd01
    jsr enter
#include "page.i65"
    .word forth
#include "parm.i65"
    .word dlit
    .word tddata
    .word 0
#include "past.i65"
    .word exit

;--------------------------------------------------------------
#include "align.i65"
_tdd02
    jsr enter
#include "page.i65"
    .word assembler
#include "parm.i65"
    .word dlit
    .word tddata
    .word 1
#include "past.i65"
    .word exit

;--------------------------------------------------------------
#include "align.i65"
_tdd03
    jsr enter
#include "page.i65"
    .word assembler
#include "parm.i65"
    .word dlit
    .word tddata
    .word $FFFF
#include "past.i65"
    .word exit

;--------------------------------------------------------------
#include "align.i65"
_tdd04
    jsr enter
#include "page.i65"
    .word forth
#include "parm.i65"
    .word dlit
    .word tddata
    .word $FFFF
#include "past.i65"
    .word exit

;--------------------------------------------------------------

pseequewrapper
    brk
    .byt ld  | TOS
    .byt st  | N5
    .byt pull
    .byt ext
    .word pseeque
    .byt nxt

/*

    brk
    .byt set | N6
    .word uservocabs+1                  ; first vocab
pseequewrap01
    .byt ldd | N6
    .byt st  | N5                       ; get vocabid
    .byt set | N3
    .word usersymnew
    .byt ldd | N3
    .byt st  | N3
    .byt ext
    .word pseeque
    .byt bc  , <(pseequewrap86-*-2)          ; early exit if it was found
    .byt ld  | N7                       ; let's have a look at the sorted list then
    .byt st  | N3
pseequewrap86

*/
