; test-general.a65
;#echo .       test-general.a65          Tests

;--------------------------------------------------------------
#if 0
name=TWONKY
stack=( -- 1024 )
tags=const,forth-83

#endif
#include "align.i65"
_twonky
	jsr enter
#include "page.i65"
	.word two
#include "page.i65"
	.word _block
#include "page.i65"
	.word editing
#include "page.i65"
	.word dup
#include "page.i65"
	.word on
#include "page.i65"
	.word five
#include "page.i65"
	.word _block
#include "page.i65"
	.word _dot
#include "page.i65"
	.word cr
#include "page.i65"
	.word off
#include "pass.i65"
	.word clit
	.byt $13
#include "page.i65"
	.word emit
#include "pass.i65"
	.word exit

;--------------------------------------------------------------
#if 0
name=BIRD
stack=( addr -- )
tags=test

: bird
	begin
		."    [lf][lf][lf]"
		rnd

		." @W@[lf][lf][lf]"
		15 jiffies
		." UWI[lf][lf][lf]"
		15 jiffies
		." @W@[lf][lf][lf]"
		15 jiffies
		." JWK[lf][lf][lf]"
		15 jiffies
#endif
#include "align.i65"
_bird
	jsr enter
#include "page.i65"
	.word two
#include "pass.i65"
	.word exit

;--------------------------------------------------------------
#if 0
name=WAVE
stack=( -- )
tags=test

: wave
	begin
		."    [lf][lf][lf]"
		rnd

		." @W@[lf][lf][lf]"
		15 jiffies
		." UWI[lf][lf][lf]"
		15 jiffies
		." @W@[lf][lf][lf]"
		15 jiffies
		." JWK[lf][lf][lf]"
		15 jiffies
#endif
wave
	stx z
	lda #$93
	jsr $FFD2
	ldy #0
	lda #<VIDRAM
	sta n
	lda #>VIDRAM
	sta n+1
	jsr randu
	and #7
	tax
wave01
	jsr randu
	sta n+2
wave02
	lda wavetable,x
	sta (n),y
	lsr n+2
	bcc wave03
	inx
	cpx #8
	bne wave05
wave03
	dex
	bpl wave05
	inx
wave05
	iny
	bne wave06
	inc n+1
	lda n+1
	and #$83
	sta n+1
wave06
	tya
	and #7
	bne wave02
	beq wave01

	jsr enter
#include "page.i65"
	.word two
#include "pass.i65"
	.word exit

wavetable
	.byt $64,$52,$46,$40,$43,$44,$45,$63

;--------------------------------------------------------------
#if 0
name=QUARTERS
stack=( -- )
tags=test

: quarters
#endif
#include "align.i65"
_quarters
	jsr enter
#include "page.i65"
	.word xyzzy
#include "pass.i65"
	.word exit

quartertable
	.byt $64,$52,$46,$40,$43,$44,$45,$63


;--------------------------------------------------------------
#if 0
name=KEYIRQ!
stack=( -- )
tags=test

```
: keyirq!   ( -- )
	;
```
#endif
#include "align.i65"
_keyirqstore
	jsr enter
#include "pass.i65"
	.word plit
	.word keyirq
#include "page.i65"
;~~~	.word irqstore
#include "pass.i65"
	.word exit

keyirq
	lda LSTX 					; $97
	sta VIDRAM					; $8000
	jmp MAINIRQ 				; $E455
