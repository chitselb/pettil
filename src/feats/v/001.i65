;001 - perturb-v

;--------------------------------------------------------------
#if 0
name=PERTURB-V
tags=system,test,nosymbol

#endif
_perturb_v
    .word plits
    .byt 8
;
    .word userstartup
    .word restart+1
;
    .word next                  ; instead of clearing memory and erasing PERTURB...
    .word perturbpreserve
;
    .word _perturb_v_callback
    .word there+perturbpatch-hitop+4
;
    .word perturb_v_expect
    .word expect+1
#include "page.i65"
    .word store
#include "page.i65"
    .word store
#include "page.i65"
    .word store
#include "page.i65"
    .word store
#include "past.i65"
    .word restart

#include "align.i65"
_perturb_v_callback
    jsr toforth
#ifdef IS_VIC20
;#include "parm.i65"
    .word dlit
    .byt $00,$3D
    .word VIC6560+$0E
#include "pad.i65"
    .word store
#endif
#ifdef IS_C64
#include "parm.i65"
    .word dlit
    .byt $05,$0D                ; lt green background / dk green border
    .word VIC6567+$20
#include "pad.i65"
    .word store
#include "parm.i65"
    .word clit
    .byt 31                     ; dk blue
#include "pad.i65"
    .word emit
#endif
#include "page.i65"
    .word dotclr
#include "parm.i65"
    .word docursor
#ifdef IS_PET
#ifdef IS_PET80
    .byt 45                     ; X column
    .byt 17                     ; Y line
#else
    .byt 23                     ; X column
    .byt 16                     ; Y line
#endif
#else
#ifdef IS_VIC20
    .byt 13                     ; X column
    .byt 15                     ; Y line
#else
    .byt 23                     ; X column
    .byt 16                     ; Y line
#endif
#endif

#include "parm.i65"
    .word clit
    .asc "V"
#include "pad.i65"
    .word emit
#include "page.i65"
    .word four
#include "page.i65"
    .word _jiffies
#include "parm.i65"
    .word dlit
    .word _errormsg
    .word userwarning
#include "pad.i65"
    .word store
#include "past.i65"
    .word _warm

dokeybuf
    jsr dodoes
#include "page.i65"
    .word cfetchplus
#include "page.i65"
    .word duptor
#include "parm.i65"
    .word clit
    .byt NDX
#include "pad.i65"
    .word cstore
#include "page.i65"
    .word rfetch
#include "page.i65"
    .word zero
#include "parm.i65"
    .word pqdo
    .byt <(dokeybuf02-*+1)
#include "pad.i65"
dokeybuf01
    .word cfetchplus
#include "page.i65"
    .word i
#include "parm.i65"
    .word plit
    .word KEYD
#include "pad.i65"
    .word plus
#include "page.i65"
    .word cstore
#include "parm.i65"
    .word ploop
    .byt <(dokeybuf01-*+1)
#include "pad.i65"
dokeybuf02
    .word rdrop
#include "page.i65"
    .word drop
#include "past.i65"
    .word exit

infocommand
    jsr dokeybuf
    .byt <(infocommand01-*-1)
    .asc "INFO",CR
infocommand01
    .word 0

#include "align.i65"
perturb_v_expectxxx
    lda pip
    sta infocommand01
    lda pip+1
    sta infocommand01+1
    jsr toforth
#include "page.i65"
    .word infocommand
#include "parm.i65"
    .word dlit                  ; replace original EXPECT
    .word harvests2
    .word expect+1
#include "pad.i65"
    .word store
#include "past.i65"
    .word *+2
    lda infocommand01
    sta pip
    lda infocommand01+1
    sta pip+1
    jmp harvests2

commands
    .byt <(commands01-*-1)
    .asc "INFO",CR
commands01
    .byt <(commands02-*-1)
    .asc "INFO",CR
commands02
    .byt <(commands03-*-1)
    .asc "WORDS",CR
commands03
    .byt <(commands04-*-1)
    .asc "INFO",CR
commands04
    .byt <(commands05-*-1)
    .asc ".S",CR
commands05
    .word 0

cmdidx
    .word commands

perturb_v_expect
    jsr slip
    lda cmdidx
    sta tos
    lda cmdidx+1
    sta tos+1
    ldy #0
    lda (tos),y
    beq perturb_v_expect02
    tay
    sec
    adc cmdidx
    sta cmdidx
    lda cmdidx+1
    adc #0
    sta cmdidx+1
    sty NDX
perturb_v_expect01
    lda (tos),y
    sta KEYD-1,Y
    dey
    bne perturb_v_expect01
perturb_v_expect02
    jsr slide
    jmp harvests2

#ifdef nope

.C:476b  20 81 11    JSR .toforth   - A:50 X:2E Y:00 SP:f4 ..-B...C   41352323

.C:476b   .infocommand01:
.C:476b  20 81 11    JSR .toforth
.C:476e  62 47          infocommand
.C:4770  28 0E          xyzzy
.C:4772  37 12          dlit
.C:4774  73 18          expect+1
.C:4776  ED 06          harvests2
.C:4778  BD 0F          store
.C:477A  7C 47          *+2
.C:477c  4C ED 06    JMP .harvests2
.C:477f  AA          TAX
.C:4780  AA          TAX
>C:0000  00 00 50 00  98 07 0c ff  04 40 e4 64  06 60 07 70
>C:0010  00 02 20 00  00 a0 34 d5  00 01 0d d0  00 83 86 00
>C:0020  aa aa aa aa  aa aa aa aa  aa aa aa aa  aa aa aa aa
>C:0030  aa aa aa aa  aa aa aa aa  aa aa aa aa  aa aa aa aa
>C:0040  aa aa aa aa  aa aa aa 08  88 07 ae 00  19 00 00 00
>C:0050  bb bb bb bb  bb bb bb bb  bb bb bb bb  bb bb bb bb
>C:0060  bb bb bb bb  bb bb bb bb  bb bb bb bb  bb bb bb bb
>C:0070  bb bb bb bb  bb bb bb 00  06 00 06 67  00 02 02 00
>C:0080  00 00 00 00  74 06 e6 8b  e6 8b 6c 0f  6f 00 04 4c
>C:0090  55 e4 55 06  ff b3 40 ff  00 de 01 ff  00 00 00 00
>C:0170  ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
>C:0180  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
>C:0190  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
>C:01a0  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
>C:01b0  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
>C:01c0  ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
>C:01d0  ff ff ff ff  ff ff ff ff  ff ff ff 44  cd b7 bb ce
>C:01e0  65 e3 01 2f  0d c7 05 cb  0f c6 6e 73  6f e6 6e 54
>C:01f0  68 38 47 0e  10 74 18 0b  69 40 69 2e  6f 5d 6f fd
.C:1181  68          PLA            - A:50 X:2E Y:00 SP:f2 ..-B...C
(C:$1181)
#endif
