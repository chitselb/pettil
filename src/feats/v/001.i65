;001 - perturb-v

;--------------------------------------------------------------
#if 0
name=PERTURB-V
tags=system,test,nosymbol

#endif
_perturb_v
    .word plits
    .byt 8
;
    .word userstartup
    .word restart+1
;
    .word next                  ; instead of clearing memory and erasing PERTURB...
    .word perturbpreserve
;
    .word _perturb_v_callback
    .word there+perturbpatch-hitop+4
;
    .word perturb_v_expect
    .word expect+1
#include "page.i65"
    .word store
#include "page.i65"
    .word store
#include "page.i65"
    .word store
#include "page.i65"
    .word store
#include "pass.i65"
    .word restart

;    jsr enter
    jmp ABEND


#include "align.i65"
_perturb_v_callback
    jsr toforth
#ifdef IS_VIC20
;#include "pass.i65"
    .word dlit
    .word VIC6560+$0E
    .byt $00,$3D
#include "page.i65"
    .word store
#endif
#ifdef IS_C64
#include "pass.i65"
    .word dlit
    .word VIC6567+$20
    .byt $05,$0D                ; lt green background / dk green border
#include "page.i65"
    .word store
#include "pass.i65"
    .word clit
    .byt 31                     ; dk blue
#include "page.i65"
    .word emit
#endif
#include "page.i65"
    .word dotclr
#include "pass.i65"
    .word docursor
#ifdef IS_PET
#ifdef IS_PET80
    .byt 45                     ; X column
    .byt 17                     ; Y line
#else
    .byt 23                     ; X column
    .byt 16                     ; Y line
#endif
#else
#ifdef IS_VIC20
    .byt 13                     ; X column
    .byt 15                     ; Y line
#else
    .byt 23                     ; X column
    .byt 16                     ; Y line
#endif
#endif

#include "pass.i65"
    .word clit
    .asc "V"
#include "page.i65"
    .word emit
#include "page.i65"
    .word four
#include "page.i65"
    .word _jiffies
#include "pass.i65"
    .word dlit
    .word _errormsg
    .word userwarning
#include "page.i65"
    .word store
#include "page.i65"
    .word _cold

perturb_v_expect
    jmp harvests2
