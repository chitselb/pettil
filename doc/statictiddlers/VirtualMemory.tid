tags: static default concepts
title: Virtual Memory

!!Virtual Memory

!!!General
There is a single 1K block buffer (yes. just one buffer. yes. I know.) located directly below the [[symbol table|SYMTAB]].  Blocks are rlencoded and stored in the virtual memory buffer ([[VMBUF]]).  This `VMBUF` area is saved, loaded and verified in its entirety as a PRG file.  This could be to tape or disk, but currently only tape is supported, as that's what most of us had.  

!!!Packets
The packeting scheme handles two types of block, using metadata to distinguish them.  This approach came about to support the 1000-byte character limit of the display and the PET native editor's linewrapping features for source code while still providing traditional 1024-byte Forth blocks.  Each packet consists of a two-byte header

|f|e|d|c|b|a|9|8|7|6|5|4|3|2|1|0||h
|^S||^-|^-|^-||<|<|<|<|<|<|<|<|<|<|packet type<br/>0=data packet<br/>1=screen packet|
||^C|^-|^-|^-||<|<|<|<|<|<|<|<|<|<|compression flag<br/>0=compressed<br/>1=uncompressed|
||<|^-|^-|^-|^L|^L|^L|^L|^L|^L|^L|^L|^L|^L|^L|packet length<br/>(including header)|

!!!Data vs. Screen packets
|^Data|^Screen|h
|^1024 bytes|^1003 bytes<br/>3 linewrap<br/>1000 screen codes|
|^read-only in editor|^editable in editor|
|^initialized to zeroes<br/>[[ERASE]]|^initialized to spaces<br/>[[BLANK]]|
|^msb of header [[OFF]]<br/>(AND $7FFF)|^msb of header [[ON]]<br/>(OR $8000)|
|^always unpacks to [[BLKBUF]]|^unpacks to [[VIDRAM]] (only when [[EDITING?]])|

!!!Relocation

When the Transient dictionary and symbols aren't present, the [[block buffer|BLKBUF]] will be 1K below the top of physical memory. Saving to disk or tape adjusts the start and end pointers in the tape header to always end at this address, and loading or verifying will adjust the start and end address to reflect the current location of [[VMBUF]]

!!!Creating blocks
The packet number is implicit by that packet's position within VMBUF.  The packet header stored at BUFFER-2 is for packet 0, and packets build downward from there.  BLOCK can't refer to a packet that doesn't exist, so when a packet is referenced by BLOCK, new packets may need to be created.  If EDITING? is false, all newly created blocks will be data packets, otherwise they will be screen packets

!!!Virtual memory words
*[[BUFFER]]  ( u -- addr )<br>Returns the //addr// of [[BLKBUF]] and sets either [[SCR]] or [[BLK]] = //u//.  No packet is created in the [[VMBUF]] region until [[UPDATE]], and no initialization of the [[BLKBUF]] buffer contents occurs.
*[[BLKBUF]]  ( -- addr )<br>Returns the //addr// of BLKBUF.  No packet is registered to the buffer.
*[[UPDATE]]   ( -- )<br>commits the current PACKET to the VMBUF
*[[BLOCK]]   ( u -- addr )<br>Unpacks the requested block from VMBUF to BUFFER, creating it and any lower-numbered blocks if necessary.  BUFFER is first filled with spaces.
*[[RLENCODE]]   ( source dest srcsize -- finaldest flag )<br>Performs a run-length encoding operation on the region of memory between //source// and (//source//+//srcsize//) with the output delivered to //dest//.  The //finaldest// returned is the next available address following the compressed data, and //flag// indicates if RLENCODE was unable (//flag//=true) to compress the data smaller than it    s original size, and was simply copied.  Compressed data returns //flag//=false.
*[[RLDECODE]]   ( source dest srcsize -- finaldest )<br>Uncompresses //srcsize// bytes of data beginning at //source//, delivering the output at //dest//.
*[[VMBUF]]   ( -- addr )<br>User Variable<br>The bottom address of the virtual memory buffer.  The buffer grows downward, and is always marked by a zero-word at the tail.
*[[#VMPKT]]  ( -- addr )<br>User Variable<br>The current number of packets in VMBUF.  EMPTY-BUFFERS resets this to zero.
*[[SCR]]   ( -- addr )<br>User Variable<br>Current screen.  The screen most recently edited or listed.  SCR might hold the block number of a data packet, but the editor views data packets in read-only mode.  Writable screen packets are commited to the VMBUF (by UPDATE) when the user navigates away from the screen in the editor or [[exits|STOP-Q]] the editor.
*[[EDITING]]   ( -- addr )<br>User Variable, determines whether system is in screen editor mode<br>
*[[EDITING?]]   ( -- flag )<br>Retrieves [[EDITING]] value<br>
*[[VIDRAM]]   ( -- $8000 )<br>Constant<br>The address of the upper left corner of the screen, the start of the memory-mapped video area
*[[SAVE-BUFFERS]]   ( -- )<br>Writes the memory between [[VMBUF]] and [[BLKBUF]] out to tape via the kernel SAVE routine.
*[[LOAD-BUFFERS]]   ( -- )<br>Searches on the DRV# device for the named file stored in FILENAME and reads it in at PAD, initially.   After LOAD completes, the memory will be moved to just below BUFFER, then VMBUF and #PKTS will be set to reflect what was loaded.  If FILENAME is off, or the length is zero, LOAD-BUFFERS will read the next file. 
*[[EMPTY-BUFFERS]]   ( -- )<br>Empties the virtual memory packet buffer by setting VMBUF to BUFFER-2 and storing a zero there, and resets #PKTS to zero.
*[[FLUSH]]   ( -- )<br>performs [[SAVE-BUFFERS]] then [[EMPTY-BUFFERS]]
*[[FILENAME]]   ( -- addr )<br>User Variable<br>The address of a counted string.  The first 16 characters is the filename for [[SAVE-BUFFERS]] or [[LOAD-BUFFERS]]
*[[DRV#]]   ( -- addr )<br>User Variable<br>Contains the current device number for [[SAVE-BUFFERS]] and [[LOAD-BUFFERS]].  The default value is 1 (cassette #1)
