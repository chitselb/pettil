#1 (Stop on  exec f6e3)  246 026
.C:f6e3  A5 D4       LDA $D4        - A:01 X:F9 Y:7F SP:f8 ..-B...C   90440218
(C:$f6e3) g
(C:$e0c3) d f784
; check jiffy clock vs. midnight
.C:f784  A2 00       LDX #$00
.C:f786  B5 8D       LDA $8D,X
.C:f788  DD AC F7    CMP $F7AC,X
.C:f78b  90 14       BCC $F7A1
.C:f78d  E8          INX
.C:f78e  E0 03       CPX #$03
.C:f790  D0 F4       BNE $F786
.C:f792  A9 00       LDA #$00
.C:f794  95 8C       STA $8C,X
.C:f796  CA          DEX
.C:f797  D0 FB       BNE $F794
.C:f799  F0 06       BEQ $F7A1
.C:f79b  A9 00       LDA #$00
.C:f79d  85 99       STA $99
.C:f79f  85 9A       STA $9A
.C:f7a1  AD 12 E8    LDA $E812
.C:f7a4  CD 12 E8    CMP $E812
.C:f7a7  D0 F8       BNE $F7A1
.C:f7a9  85 9B       STA $9B
.C:f7ab  60          RTS
.C:f7ac  4F 1A 01               .byt 4F 1A 01
.C:f7af  48          PHA
.C:f7b0  8A          TXA
.C:f7b1  48          PHA
.C:f7b2  98          TYA
.C:f7b3  48          PHA
.C:f7b4  A9 00       LDA #$00
.C:f7b6  85 96       STA $96
.C:f7b8  8A          TXA
.C:f7b9  20 C1 F2    JSR $F2C1  ; search table for logical file number
.C:f7bc  F0 05       BEQ $F7C3
.C:f7be  A0 17       LDY #$17   ; "FILE NOT OPEN"
.C:f7c0  4C AF F5    JMP $F5AF
.C:f7c3  20 CD F2    JSR $F2CD  ; Set file data from position in table.
.C:f7c6  A5 D4       LDA $D4
.C:f7c8  F0 10       BEQ $F7DA
.C:f7ca  C9 03       CMP #$03
.C:f7cc  F0 0C       BEQ $F7DA
.C:f7ce  B0 0F       BCS $F7DF
.C:f7d0  A6 D3       LDX $D3
.C:f7d2  E0 60       CPX #$60
.C:f7d4  F0 04       BEQ $F7DA
.C:f7d6  A0 86       LDY #$86   ; "NOT INPUT FILE"
.C:f7d8  D0 E6       BNE $F7C0
.C:f7da  85 AF       STA $AF
.C:f7dc  4C 9C F2    JMP $F29C
.C:f7df  48          PHA
.C:f7e0  20 E1 DB    JSR $DBE1  ; clear DS$ and ST
.C:f7e3  20 D2 F0    JSR $F0D2  ; send "Talk" on IEEE-488 buss
.C:f7e6  A5 D3       LDA $D3
.C:f7e8  10 06       BPL $F7F0
.C:f7ea  20 98 F1    JSR $F198  ; send byte on IEEE-488 buss
.C:f7ed  4C F3 F7    JMP $F7F3
.C:f7f0  20 93 F1    JSR $F193  ; send byte, then set NDAC (not data accepted) true
.C:f7f3  A5 96       LDA $96
.C:f7f5  10 03       BPL $F7FA
.C:f7f7  4C BB F4    JMP $F4BB  ; print "DEVICE NOT PRESENT" error
.C:f7fa  68          PLA
.C:f7fb  4C DA F7    JMP $F7DA
.C:f7fe  48          PHA
.C:f7ff  8A          TXA
.C:f800  48          PHA
.C:f801  98          TYA
.C:f802  48          PHA
.C:f803  A9 00       LDA #$00
.C:f805  85 96       STA $96
.C:f807  8A          TXA
.C:f808  20 C1 F2    JSR $F2C1  ; search table for logical file number
.C:f80b  D0 B1       BNE $F7BE
.C:f80d  20 CD F2    JSR $F2CD  ;Set file data from position in table.
.C:f810  A5 D4       LDA $D4
.C:f812  D0 04       BNE $F818
.C:f814  A0 94       LDY #$94   ; "NOT OUTPUT FILE"
.C:f816  D0 A8       BNE $F7C0
.C:f818  C9 03       CMP #$03
.C:f81a  F0 0C       BEQ $F828
.C:f81c  B0 0F       BCS $F82D
.C:f81e  A6 D3       LDX $D3
.C:f820  E0 60       CPX #$60
.C:f822  D0 04       BNE $F828
.C:f824  A0 94       LDY #$94   ; "NOT OUTPUT FILE"
.C:f826  D0 98       BNE $F7C0
.C:f828  85 B0       STA $B0
.C:f82a  4C 9C F2    JMP $F29C
.C:f82d  48          PHA
.C:f82e  20 E1 DB    JSR $DBE1  ; clear DS$ and ST
.C:f831  20 D5 F0    JSR $F0D5
.C:f834  A5 D3       LDA $D3
.C:f836  10 05       BPL $F83D
.C:f838  20 48 F1    JSR $F148
.C:f83b  D0 03       BNE $F840
.C:f83d  20 43 F1    JSR $F143
.C:f840  A5 96       LDA $96
.C:f842  10 03       BPL $F847
.C:f844  4C BB F4    JMP $F4BB
.C:f847  68          PLA
.C:f848  4C 28 F8    JMP $F828
.C:f84b  20 95 F6    JSR $F695
.C:f84e  A6 D4       LDX $D4
.C:f850  F6 BA       INC $BA,X
.C:f852  B4 BA       LDY $BA,X
.C:f854  C0 C0       CPY #$C0
.C:f856  60          RTS
.C:f857  20 7A F8    JSR $F87A
.C:f85a  F0 2F       BEQ $F88B
.C:f85c  A0 41       LDY #$41   ; "PRESS PLAY"
.C:f85e  20 85 F1    JSR $F185
.C:f861  A0 56       LDY #$56   ; "ON TAPE"
.C:f863  20 85 F1    JSR $F185
.C:f866  A5 D4       LDA $D4
.C:f868  09 30       ORA #$30
.C:f86a  20 02 E2    JSR $E202
.C:f86d  20 35 F9    JSR $F935
.C:f870  20 7A F8    JSR $F87A
.C:f873  D0 F8       BNE $F86D
.C:f875  A0 AA       LDY #$AA   ; "<cr>OK<cr>"
.C:f877  4C 85 F1    JMP $F185
.C:f87a  A9 10       LDA #$10
.C:f87c  A6 D4       LDX $D4
.C:f87e  CA          DEX
.C:f87f  F0 02       BEQ $F883
.C:f881  A9 20       LDA #$20
.C:f883  2C 10 E8    BIT $E810
.C:f886  D0 03       BNE $F88B
.C:f888  2C 10 E8    BIT $E810
.C:f88b  60          RTS
.C:f88c  20 7A F8    JSR $F87A
.C:f88f  F0 FA       BEQ $F88B
.C:f891  A0 41       LDY #$41   ; "PRESS PLAY"
.C:f893  20 85 F1    JSR $F185
.C:f896  A0 4D       LDY #$4D   ; "& RECORD"
.C:f898  D0 C4       BNE $F85E
.C:f89a  A9 00       LDA #$00
.C:f89c  85 96       STA $96
.C:f89e  85 9D       STA $9D
.C:f8a0  20 AB F6    JSR $F6AB
.C:f8a3  20 2B F9    JSR $F92B
.C:f8a6  20 57 F8    JSR $F857
.C:f8a9  78          SEI
.C:f8aa  A9 00       LDA #$00
.C:f8ac  85 C2       STA $C2
.C:f8ae  85 CE       STA $CE
.C:f8b0  85 CB       STA $CB
.C:f8b2  85 C0       STA $C0
.C:f8b4  85 C1       STA $C1
.C:f8b6  85 B2       STA $B2
.C:f8b8  A6 D4       LDX $D4
.C:f8ba  CA          DEX
.C:f8bb  F0 07       BEQ $F8C4
.C:f8bd  A9 90       LDA #$90
.C:f8bf  8D 4E E8    STA $E84E
.C:f8c2  D0 03       BNE $F8C7
.C:f8c4  EE 11 E8    INC $E811
.C:f8c7  A2 0E       LDX #$0E
.C:f8c9  D0 15       BNE $F8E0
.C:f8cb  20 AB F6    JSR $F6AB
.C:f8ce  20 2B F9    JSR $F92B
.C:f8d1  A9 14       LDA #$14
.C:f8d3  85 C3       STA $C3
.C:f8d5  20 8C F8    JSR $F88C
.C:f8d8  78          SEI
.C:f8d9  A9 A0       LDA #$A0
.C:f8db  8D 4E E8    STA $E84E
.C:f8de  A2 08       LDX #$08
.C:f8e0  20 E0 FC    JSR $FCE0
.C:f8e3  A9 02       LDA #$02
.C:f8e5  85 DE       STA $DE
.C:f8e7  20 C9 FB    JSR $FBC9
.C:f8ea  CE 13 E8    DEC $E813
.C:f8ed  A6 D4       LDX $D4
.C:f8ef  CA          DEX
.C:f8f0  D0 09       BNE $F8FB
.C:f8f2  A9 34       LDA #$34
.C:f8f4  8D 13 E8    STA $E813
.C:f8f7  85 F9       STA $F9
.C:f8f9  D0 0A       BNE $F905
.C:f8fb  AD 40 E8    LDA $E840
.C:f8fe  86 FA       STX $FA
.C:f900  29 EF       AND #$EF
.C:f902  8D 40 E8    STA $E840
;1/3 rd second delay for motor to pick up speed.
.C:f905  A2 FF       LDX #$FF
.C:f907  A0 FF       LDY #$FF
.C:f909  88          DEY
.C:f90a  D0 FD       BNE $F909
.C:f90c  CA          DEX
.C:f90d  D0 F8       BNE $F907
;Sets timer #2, clears the interrupt disable mask, and waits for the IRQ vector to be reset to normal.
.C:f90f  8D 49 E8    STA $E849
.C:f912  58          CLI
.C:f913  A9 E4       LDA #$E4
.C:f915  C5 91       CMP $91
.C:f917  F0 11       BEQ $F92A
.C:f919  20 35 F9    JSR $F935
.C:f91c  2C 13 E8    BIT $E813
.C:f91f  10 F2       BPL $F913
.C:f921  2C 12 E8    BIT $E812
.C:f924  20 68 F7    JSR $F768
.C:f927  4C 13 F9    JMP $F913
.C:f92a  60          RTS
;Await IRQ's return to normal
.C:f92b  20 35 F9    JSR $F935
.C:f92e  A9 E4       LDA #$E4
.C:f930  C5 91       CMP $91
.C:f932  D0 F7       BNE $F92B
.C:f934  60          RTS
; test Stop key and action it if it's pressed.
.C:f935  20 35 F3    JSR $F335
.C:f938  D0 08       BNE $F942
.C:f93a  20 C0 FC    JSR $FCC0
.C:f93d  20 B8 F2    JSR $F2B8
.C:f940  85 10       STA $10
.C:f942  4C C6 B7    JMP $B7C6
;Set VIA timer #1 to new value, synchronized with timer #2 becoming zero.
.C:f945  86 CC       STX $CC
.C:f947  A5 CB       LDA $CB
.C:f949  0A          ASL A
.C:f94a  0A          ASL A
.C:f94b  18          CLC
.C:f94c  65 CB       ADC $CB
.C:f94e  18          CLC
.C:f94f  65 CC       ADC $CC
.C:f951  85 CC       STA $CC
.C:f953  A9 00       LDA #$00
.C:f955  24 CB       BIT $CB
.C:f957  30 01       BMI $F95A
.C:f959  2A          ROL A
.C:f95a  06 CC       ASL $CC
.C:f95c  2A          ROL A
.C:f95d  06 CC       ASL $CC
.C:f95f  2A          ROL A
.C:f960  AA          TAX
.C:f961  AD 48 E8    LDA $E848
.C:f964  C9 15       CMP #$15
.C:f966  90 F9       BCC $F961
.C:f968  65 CC       ADC $CC
.C:f96a  8D 44 E8    STA $E844
.C:f96d  8A          TXA
.C:f96e  6D 49 E8    ADC $E849
.C:f971  8D 45 E8    STA $E845
.C:f974  58          CLI
.C:f975  60          RTS
;Read bits from tape: interrupt entry when table offset = #$OE.
.C:f976  AE 49 E8    LDX $E849
.C:f979  A0 FF       LDY #$FF
.C:f97b  98          TYA
.C:f97c  ED 48 E8    SBC $E848
.C:f97f  EC 49 E8    CPX $E849
.C:f982  D0 F2       BNE $F976
.C:f984  86 CC       STX $CC
.C:f986  AA          TAX
.C:f987  8C 48 E8    STY $E848
.C:f98a  8C 49 E8    STY $E849
.C:f98d  98          TYA
.C:f98e  E5 CC       SBC $CC
.C:f990  86 CC       STX $CC
.C:f992  4A          LSR A
.C:f993  66 CC       ROR $CC
.C:f995  4A          LSR A
.C:f996  66 CC       ROR $CC
.C:f998  A5 CB       LDA $CB
.C:f99a  18          CLC
.C:f99b  69 3C       ADC #$3C
.C:f99d  2C 40 E8    BIT $E840
.C:f9a0  2C 10 E8    BIT $E810
.C:f9a3  C5 CC       CMP $CC
.C:f9a5  B0 4A       BCS $F9F1
.C:f9a7  A6 B2       LDX $B2
.C:f9a9  F0 03       BEQ $F9AE
.C:f9ab  4C 9C FA    JMP $FA9C
.C:f9ae  A6 B7       LDX $B7
.C:f9b0  30 1B       BMI $F9CD
.C:f9b2  A2 00       LDX #$00
.C:f9b4  69 30       ADC #$30
.C:f9b6  65 CB       ADC $CB
.C:f9b8  C5 CC       CMP $CC
.C:f9ba  B0 1C       BCS $F9D8
.C:f9bc  E8          INX
.C:f9bd  69 26       ADC #$26
.C:f9bf  65 CB       ADC $CB
.C:f9c1  C5 CC       CMP $CC
.C:f9c3  B0 17       BCS $F9DC
.C:f9c5  69 2C       ADC #$2C
.C:f9c7  65 CB       ADC $CB
.C:f9c9  C5 CC       CMP $CC
.C:f9cb  90 03       BCC $F9D0
.C:f9cd  4C 4C FA    JMP $FA4C
.C:f9d0  A5 CE       LDA $CE
.C:f9d2  F0 1D       BEQ $F9F1
.C:f9d4  85 BE       STA $BE
.C:f9d6  D0 19       BNE $F9F1
.C:f9d8  E6 BF       INC $BF
.C:f9da  B0 02       BCS $F9DE
.C:f9dc  C6 BF       DEC $BF
.C:f9de  38          SEC
.C:f9df  E9 13       SBC #$13
.C:f9e1  E5 CC       SBC $CC
.C:f9e3  65 9C       ADC $9C
.C:f9e5  85 9C       STA $9C
.C:f9e7  A5 B9       LDA $B9
.C:f9e9  49 01       EOR #$01
.C:f9eb  85 B9       STA $B9
.C:f9ed  F0 21       BEQ $FA10
.C:f9ef  86 D9       STX $D9
.C:f9f1  A5 CE       LDA $CE
.C:f9f3  F0 18       BEQ $FA0D
.C:f9f5  2C 4D E8    BIT $E84D
.C:f9f8  50 13       BVC $FA0D
.C:f9fa  A9 00       LDA #$00
.C:f9fc  85 B9       STA $B9
.C:f9fe  A5 B7       LDA $B7
.C:fa00  10 31       BPL $FA33
.C:fa02  30 C9       BMI $F9CD
.C:fa04  A2 A6       LDX #$A6
.C:fa06  20 45 F9    JSR $F945
.C:fa09  A5 B1       LDA $B1
.C:fa0b  D0 C3       BNE $F9D0
.C:fa0d  4C 00 E6    JMP $E600
.C:fa10  A5 9C       LDA $9C
.C:fa12  F0 08       BEQ $FA1C
.C:fa14  30 04       BMI $FA1A
.C:fa16  C6 CB       DEC $CB
.C:fa18  C6 CB       DEC $CB
.C:fa1a  E6 CB       INC $CB
.C:fa1c  A9 00       LDA #$00
.C:fa1e  85 9C       STA $9C
.C:fa20  E4 D9       CPX $D9
.C:fa22  D0 0F       BNE $FA33
.C:fa24  8A          TXA
.C:fa25  D0 A9       BNE $F9D0
.C:fa27  A5 BF       LDA $BF
.C:fa29  30 C6       BMI $F9F1
.C:fa2b  C9 10       CMP #$10
.C:fa2d  90 C2       BCC $F9F1
.C:fa2f  85 AB       STA $AB
.C:fa31  B0 BE       BCS $F9F1
.C:fa33  8A          TXA
.C:fa34  45 B1       EOR $B1
.C:fa36  85 B1       STA $B1
.C:fa38  A5 CE       LDA $CE
.C:fa3a  F0 D1       BEQ $FA0D
.C:fa3c  C6 B7       DEC $B7
.C:fa3e  30 C4       BMI $FA04
.C:fa40  46 D9       LSR $D9
.C:fa42  66 DF       ROR $DF
.C:fa44  A2 DA       LDX #$DA
.C:fa46  20 45 F9    JSR $F945
.C:fa49  4C 00 E6    JMP $E600
.C:fa4c  A5 AB       LDA $AB
.C:fa4e  F0 04       BEQ $FA54
.C:fa50  A5 CE       LDA $CE
.C:fa52  F0 07       BEQ $FA5B
.C:fa54  A5 B7       LDA $B7
.C:fa56  30 03       BMI $FA5B
.C:fa58  4C DC F9    JMP $F9DC
.C:fa5b  46 CC       LSR $CC
.C:fa5d  A9 93       LDA #$93
.C:fa5f  38          SEC
.C:fa60  E5 CC       SBC $CC
.C:fa62  65 CB       ADC $CB
.C:fa64  0A          ASL A
.C:fa65  AA          TAX
.C:fa66  20 45 F9    JSR $F945
.C:fa69  E6 B2       INC $B2
.C:fa6b  A5 CE       LDA $CE
.C:fa6d  D0 11       BNE $FA80
.C:fa6f  A5 AB       LDA $AB
.C:fa71  F0 26       BEQ $FA99
.C:fa73  85 BE       STA $BE
.C:fa75  A9 00       LDA #$00
.C:fa77  85 AB       STA $AB
.C:fa79  A9 C0       LDA #$C0
.C:fa7b  8D 4E E8    STA $E84E
.C:fa7e  85 CE       STA $CE
.C:fa80  A5 AB       LDA $AB
.C:fa82  85 CF       STA $CF
.C:fa84  F0 09       BEQ $FA8F
.C:fa86  A9 00       LDA #$00
.C:fa88  85 CE       STA $CE
.C:fa8a  A9 40       LDA #$40
.C:fa8c  8D 4E E8    STA $E84E
.C:fa8f  A5 DF       LDA $DF
.C:fa91  85 DD       STA $DD
.C:fa93  A5 BE       LDA $BE
.C:fa95  05 BF       ORA $BF
.C:fa97  85 D0       STA $D0
.C:fa99  4C 00 E6    JMP $E600
;Store bytes in RAM. T
.C:fa9c  20 C9 FB    JSR $FBC9
.C:fa9f  85 B2       STA $B2
.C:faa1  A2 DA       LDX #$DA
.C:faa3  20 45 F9    JSR $F945
.C:faa6  A5 DE       LDA $DE
.C:faa8  F0 02       BEQ $FAAC
.C:faaa  85 BD       STA $BD
.C:faac  A9 0F       LDA #$0F
.C:faae  24 C2       BIT $C2
.C:fab0  10 17       BPL $FAC9
.C:fab2  A5 CF       LDA $CF
.C:fab4  D0 0C       BNE $FAC2
.C:fab6  A6 DE       LDX $DE
.C:fab8  CA          DEX
.C:fab9  D0 0B       BNE $FAC6
;Flag 'Long Block' error into ST, setting bit 2 of ST
.C:fabb  A9 08       LDA #$08
.C:fabd  20 C4 FB    JSR $FBC4
.C:fac0  D0 04       BNE $FAC6
.C:fac2  A9 00       LDA #$00
.C:fac4  85 C2       STA $C2
.C:fac6  4C 00 E6    JMP $E600
.C:fac9  70 31       BVS $FAFC
.C:facb  D0 18       BNE $FAE5
.C:facd  A5 CF       LDA $CF
.C:facf  D0 F5       BNE $FAC6
.C:fad1  A5 D0       LDA $D0
.C:fad3  D0 F1       BNE $FAC6
.C:fad5  A5 BD       LDA $BD
.C:fad7  4A          LSR A
.C:fad8  A5 DD       LDA $DD
.C:fada  30 03       BMI $FADF
.C:fadc  90 18       BCC $FAF6
.C:fade  18          CLC
.C:fadf  B0 15       BCS $FAF6
.C:fae1  29 0F       AND #$0F
.C:fae3  85 C2       STA $C2
.C:fae5  C6 C2       DEC $C2
.C:fae7  D0 DD       BNE $FAC6
.C:fae9  A9 40       LDA #$40
.C:faeb  85 C2       STA $C2
.C:faed  20 BB FB    JSR $FBBB
.C:faf0  A9 00       LDA #$00
.C:faf2  85 C3       STA $C3
.C:faf4  F0 D0       BEQ $FAC6
.C:faf6  A9 80       LDA #$80
.C:faf8  85 C2       STA $C2
.C:fafa  D0 CA       BNE $FAC6
.C:fafc  A5 CF       LDA $CF
.C:fafe  F0 0A       BEQ $FB0A
;Flag 'Short Block' error into ST, setting bit 3 of ST
.C:fb00  A9 04       LDA #$04
.C:fb02  20 C4 FB    JSR $FBC4
.C:fb05  A9 00       LDA #$00
.C:fb07  4C 8B FB    JMP $FB8B
.C:fb0a  20 0B FD    JSR $FD0B
.C:fb0d  D0 03       BNE $FB12
.C:fb0f  4C 89 FB    JMP $FB89
;Comparison and error-storing routine, which puts errors into the low end of the stack ($0100 ff.) and compares, where necessary, on the second read.
.C:fb12  A6 BD       LDX $BD
.C:fb14  CA          DEX
.C:fb15  F0 2D       BEQ $FB44
.C:fb17  A5 9D       LDA $9D
.C:fb19  F0 0C       BEQ $FB27
.C:fb1b  A0 00       LDY #$00
.C:fb1d  A5 DD       LDA $DD
.C:fb1f  D1 C7       CMP ($C7),Y
.C:fb21  F0 04       BEQ $FB27
.C:fb23  A9 01       LDA #$01
.C:fb25  85 D0       STA $D0
.C:fb27  A5 D0       LDA $D0
.C:fb29  F0 4C       BEQ $FB77
.C:fb2b  A2 3D       LDX #$3D
.C:fb2d  E4 C0       CPX $C0
.C:fb2f  90 3F       BCC $FB70
.C:fb31  A6 C0       LDX $C0
.C:fb33  A5 C8       LDA $C8
.C:fb35  9D 01 01    STA $0101,X
.C:fb38  A5 C7       LDA $C7
.C:fb3a  9D 00 01    STA $0100,X
.C:fb3d  E8          INX
.C:fb3e  E8          INX
.C:fb3f  86 C0       STX $C0
.C:fb41  4C 77 FB    JMP $FB77
.C:fb44  A6 C1       LDX $C1
.C:fb46  E4 C0       CPX $C0
.C:fb48  F0 37       BEQ $FB81
.C:fb4a  A5 C7       LDA $C7
.C:fb4c  DD 00 01    CMP $0100,X
.C:fb4f  D0 30       BNE $FB81
.C:fb51  A5 C8       LDA $C8
.C:fb53  DD 01 01    CMP $0101,X
.C:fb56  D0 29       BNE $FB81
.C:fb58  E6 C1       INC $C1
.C:fb5a  E6 C1       INC $C1
.C:fb5c  A5 9D       LDA $9D
.C:fb5e  F0 0C       BEQ $FB6C
.C:fb60  A5 DD       LDA $DD
.C:fb62  A0 00       LDY #$00
.C:fb64  D1 C7       CMP ($C7),Y
.C:fb66  F0 19       BEQ $FB81
.C:fb68  A9 01       LDA #$01
.C:fb6a  85 D0       STA $D0
.C:fb6c  A5 D0       LDA $D0
.C:fb6e  F0 07       BEQ $FB77
;Flag' Unrecoverable Read Error' into ST, setting bit 4 of ST
.C:fb70  A9 10       LDA #$10
.C:fb72  20 C4 FB    JSR $FBC4
.C:fb75  D0 0A       BNE $FB81
.C:fb77  A5 9D       LDA $9D
.C:fb79  D0 06       BNE $FB81
.C:fb7b  A5 DD       LDA $DD
.C:fb7d  A0 00       LDY #$00
.C:fb7f  91 C7       STA ($C7),Y
.C:fb81  E6 C7       INC $C7
.C:fb83  D0 33       BNE $FBB8
.C:fb85  E6 C8       INC $C8
.C:fb87  D0 2F       BNE $FBB8
.C:fb89  A9 80       LDA #$80
.C:fb8b  85 C2       STA $C2
.C:fb8d  A6 DE       LDX $DE
.C:fb8f  CA          DEX
.C:fb90  30 02       BMI $FB94
.C:fb92  86 DE       STX $DE
.C:fb94  C6 BD       DEC $BD
.C:fb96  F0 08       BEQ $FBA0
.C:fb98  A5 C0       LDA $C0
.C:fb9a  D0 1C       BNE $FBB8
.C:fb9c  85 DE       STA $DE
.C:fb9e  F0 18       BEQ $FBB8
.C:fba0  20 C0 FC    JSR $FCC0
.C:fba3  20 BB FB    JSR $FBBB
.C:fba6  A0 00       LDY #$00
.C:fba8  84 C3       STY $C3
.C:fbaa  20 F9 FC    JSR $FCF9
.C:fbad  A5 C3       LDA $C3
.C:fbaf  45 DD       EOR $DD
.C:fbb1  F0 05       BEQ $FBB8
.C:fbb3  A9 20       LDA #$20
.C:fbb5  20 C4 FB    JSR $FBC4
.C:fbb8  4C 00 E6    JMP $E600
;Puts (FB) into (C7) - header pointer back to start of buffer.
.C:fbbb  A5 FC       LDA $FC
.C:fbbd  85 C8       STA $C8
.C:fbbf  A5 FB       LDA $FB
.C:fbc1  85 C7       STA $C7
.C:fbc3  60          RTS
;Flag contents of A into ST byte
.C:fbc4  05 96       ORA $96
.C:fbc6  85 96       STA $96
.C:fbc8  60          RTS
;Reset flags for new byte.
.C:fbc9  A9 08       LDA #$08
.C:fbcb  85 B7       STA $B7
.C:fbcd  A9 00       LDA #$00
.C:fbcf  85 B9       STA $B9
.C:fbd1  85 BE       STA $BE
.C:fbd3  85 B1       STA $B1
.C:fbd5  85 BF       STA $BF
.C:fbd7  60          RTS
;Write a tone to tape.
.C:fbd8  A5 DD       LDA $DD
.C:fbda  4A          LSR A
.C:fbdb  A9 60       LDA #$60
.C:fbdd  90 02       BCC $FBE1
.C:fbdf  A9 B0       LDA #$B0
;
.C:fbe1  A2 00       LDX #$00
.C:fbe3  8D 48 E8    STA $E848
.C:fbe6  8E 49 E8    STX $E849
.C:fbe9  AD 40 E8    LDA $E840
.C:fbec  49 08       EOR #$08
.C:fbee  8D 40 E8    STA $E840
.C:fbf1  29 08       AND #$08
.C:fbf3  60          RTS
.C:fbf4  38          SEC
.C:fbf5  66 C8       ROR $C8
.C:fbf7  30 3C       BMI $FC35
;Write bits to tape
.C:fbf9  A5 BE       LDA $BE
.C:fbfb  D0 12       BNE $FC0F
.C:fbfd  A9 10       LDA #$10
.C:fbff  A2 01       LDX #$01
.C:fc01  20 E3 FB    JSR $FBE3
.C:fc04  D0 2F       BNE $FC35
.C:fc06  E6 BE       INC $BE
.C:fc08  A5 C8       LDA $C8
.C:fc0a  10 29       BPL $FC35
.C:fc0c  4C 86 FC    JMP $FC86
.C:fc0f  A5 BF       LDA $BF
.C:fc11  D0 09       BNE $FC1C
.C:fc13  20 DF FB    JSR $FBDF
.C:fc16  D0 1D       BNE $FC35
.C:fc18  E6 BF       INC $BF
.C:fc1a  D0 19       BNE $FC35
.C:fc1c  20 D8 FB    JSR $FBD8
.C:fc1f  D0 14       BNE $FC35
.C:fc21  A5 B9       LDA $B9
.C:fc23  49 01       EOR #$01
.C:fc25  85 B9       STA $B9
.C:fc27  F0 0F       BEQ $FC38
.C:fc29  A5 DD       LDA $DD
.C:fc2b  49 01       EOR #$01
.C:fc2d  85 DD       STA $DD
.C:fc2f  29 01       AND #$01
.C:fc31  45 B1       EOR $B1
.C:fc33  85 B1       STA $B1
.C:fc35  4C 00 E6    JMP $E600
.C:fc38  46 DD       LSR $DD
.C:fc3a  C6 B7       DEC $B7
.C:fc3c  A5 B7       LDA $B7
.C:fc3e  F0 3D       BEQ $FC7D
.C:fc40  10 F3       BPL $FC35
.C:fc42  20 C9 FB    JSR $FBC9
.C:fc45  58          CLI
.C:fc46  A5 BA       LDA $BA
.C:fc48  F0 12       BEQ $FC5C
.C:fc4a  A2 00       LDX #$00
.C:fc4c  86 D9       STX $D9
.C:fc4e  C6 BA       DEC $BA
.C:fc50  A6 DE       LDX $DE
.C:fc52  E0 02       CPX #$02
.C:fc54  D0 02       BNE $FC58
.C:fc56  09 80       ORA #$80
.C:fc58  85 DD       STA $DD
.C:fc5a  D0 D9       BNE $FC35
.C:fc5c  20 0B FD    JSR $FD0B
.C:fc5f  90 0A       BCC $FC6B
.C:fc61  D0 91       BNE $FBF4
.C:fc63  E6 C8       INC $C8
.C:fc65  A5 D9       LDA $D9
.C:fc67  85 DD       STA $DD
.C:fc69  B0 CA       BCS $FC35
.C:fc6b  A0 00       LDY #$00
.C:fc6d  B1 C7       LDA ($C7),Y
.C:fc6f  85 DD       STA $DD
.C:fc71  45 D9       EOR $D9
.C:fc73  85 D9       STA $D9
.C:fc75  E6 C7       INC $C7
.C:fc77  D0 BC       BNE $FC35
.C:fc79  E6 C8       INC $C8
.C:fc7b  D0 B8       BNE $FC35
.C:fc7d  A5 B1       LDA $B1
.C:fc7f  49 01       EOR #$01
.C:fc81  85 DD       STA $DD
.C:fc83  4C 00 E6    JMP $E600
.C:fc86  C6 DE       DEC $DE
.C:fc88  D0 03       BNE $FC8D
.C:fc8a  20 EB FC    JSR $FCEB
.C:fc8d  A9 50       LDA #$50
.C:fc8f  85 BD       STA $BD
.C:fc91  A2 08       LDX #$08
.C:fc93  78          SEI
.C:fc94  20 E0 FC    JSR $FCE0
.C:fc97  D0 EA       BNE $FC83
;Write a block to tape
.C:fc99  A9 78       LDA #$78
.C:fc9b  20 E1 FB    JSR $FBE1
.C:fc9e  D0 E3       BNE $FC83
.C:fca0  C6 BD       DEC $BD
.C:fca2  D0 DF       BNE $FC83
.C:fca4  20 C9 FB    JSR $FBC9
.C:fca7  C6 C3       DEC $C3
.C:fca9  10 D8       BPL $FC83
.C:fcab  A2 0A       LDX #$0A
.C:fcad  20 E0 FC    JSR $FCE0
.C:fcb0  58          CLI
.C:fcb1  E6 C3       INC $C3
.C:fcb3  A5 DE       LDA $DE
.C:fcb5  F0 24       BEQ $FCDB
.C:fcb7  20 BB FB    JSR $FBBB
.C:fcba  A2 09       LDX #$09
.C:fcbc  86 BA       STX $BA
.C:fcbe  D0 82       BNE $FC42
;Turn off motor/ turn off abnormal interrupts / restore IRQ
.C:fcc0  08          PHP
.C:fcc1  78          SEI
.C:fcc2  20 EB FC    JSR $FCEB
.C:fcc5  A9 7F       LDA #$7F
.C:fcc7  8D 4E E8    STA $E84E
.C:fcca  A9 3C       LDA #$3C
.C:fccc  8D 11 E8    STA $E811
.C:fccf  A9 3D       LDA #$3D
.C:fcd1  8D 13 E8    STA $E813
.C:fcd4  A2 0C       LDX #$0C
.C:fcd6  20 E0 FC    JSR $FCE0
.C:fcd9  28          PLP
.C:fcda  60          RTS
;
.C:fcdb  20 C0 FC    JSR $FCC0
.C:fcde  F0 A3       BEQ $FC83
; set IRQ
.C:fce0  BD 4C FD    LDA $FD4C,X
.C:fce3  85 90       STA $90
.C:fce5  BD 4D FD    LDA $FD4D,X
.C:fce8  85 91       STA $91
.C:fcea  60          RTS
;turn off motors
.C:fceb  A9 3C       LDA #$3C
.C:fced  8D 13 E8    STA $E813
.C:fcf0  AD 40 E8    LDA $E840
.C:fcf3  09 10       ORA #$10
.C:fcf5  8D 40 E8    STA $E840
.C:fcf8  60          RTS
;perform checksum and increment pointer
.C:fcf9  B1 C7       LDA ($C7),Y
.C:fcfb  45 C3       EOR $C3
.C:fcfd  85 C3       STA $C3
.C:fcff  E6 C7       INC $C7
.C:fd01  D0 02       BNE $FD05
.C:fd03  E6 C8       INC $C8
.C:fd05  20 0B FD    JSR $FD0B
.C:fd08  D0 EF       BNE $FCF9
.C:fd0a  60          RTS
;Check whether low address has been incremented as far as the high address; if so, the 'equals zero' flag, Z, is set true
.C:fd0b  A5 C8       LDA $C8
.C:fd0d  C5 CA       CMP $CA
.C:fd0f  D0 04       BNE $FD15
.C:fd11  A5 C7       LDA $C7
.C:fd13  C5 C9       CMP $C9
.C:fd15  60          RTS
; Power-on reset
.C:fd16  A2 FF       LDX #$FF
.C:fd18  78          SEI
.C:fd19  9A          TXS
.C:fd1a  D8          CLD
.C:fd1b  20 00 E0    JSR $E000
.C:fd1e  A9 FF       LDA #$FF
.C:fd20  85 94       STA $94
.C:fd22  A9 B3       LDA #$B3
.C:fd24  85 95       STA $95
.C:fd26  A9 78       LDA #$78
.C:fd28  85 92       STA $92
.C:fd2a  A9 D4       LDA #$D4
.C:fd2c  85 93       STA $93
.C:fd2e  A9 A4       LDA #$A4
.C:fd30  8D FA 03    STA $03FA
.C:fd33  A9 D7       LDA #$D7
.C:fd35  8D FB 03    STA $03FB
