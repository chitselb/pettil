
DO  3 +pairs    pdo mark>
?DO 3 +pairs    pqdo  mark>
LOOP  3 -pairs  <resolve  ploop 
+LOOP 3 -pairs  <resolve  pploop  
LEAVE 3 ?pairs    unloop  
?LEAVE  3 ?pairs    qleave  
IF  2 +pairs    qbranch mark>
ELSE  2 ?pairs  <resolve  branch  mark>
THEN  2 -pairs  <resolve  - 
BEGIN 1 +pairs    - mark>
WHILE 1 ?pairs    qbranch mark>
UNTIL 1 -pairs  <resolve  qbranch 
AGAIN 1 -pairs  <resolve  branch  
REPEAT  1 -pairs  <resolve  branch  



ALL
  ?comp


DO
  +3 family
  pdo, 0 c, here

?DO
  +3 family
  pqdo, 0 c, here

LOOP
  -3 family
  <resolve c!
  ploop, c,

+LOOP
  -3 family
  <resolve
  c!
  pploop, c,

LEAVE
  -3 family
  +3 family
  unloop,

?LEAVE
  -3 family
  +3 family
  pqleave,



IF
  +2 family
  qbranch, 0 c, here

ELSE
  -2 family
  +2 family
  create a forward branch
  branch, 0 c, here
  resolve the IF branch
  c!

THEN
  -2 family
  <resolve c!



BEGIN
  +1 family
  here

WHILE
  -1 family
  +1 family
  qbranch, 0 c, here

UNTIL
  -1 family
  <resolve qbranch, 0 c, here

REPEAT
  -1 family
  <resolve
  c!
  branch, c,






|^Word|^family|notes|h
|^IF|^''if''||
|^ELSE|^if||
|^THEN|^if||
* foo
** bar
** baz
* bletch
|^Word|^family|notes|h
|^BEGIN|^''begin''||
|^AGAIN|^begin||
|^UNTIL|^begin||
|^WHILE|^begin||
|^REPEAT|^begin||

|^Word|^family|compiles|h
|^DO|^''do''|(do)<br/>//leave-offset//<br/>&nbsp;&nbsp;&nbsp;...<br/>&nbsp;&nbsp;&nbsp;//loopbody//<br/>&nbsp;&nbsp;&nbsp;...<br/>(loop)<br/>//backward-branch//<br/>//leaveaddress//|
|^LOOP|^do||
|^?DO|^do||
|^+LOOP|^do||
|^LEAVE|^do|family not tested|
|^?LEAVE|^do|family not tested|
* (do)
** add //leave-offset// to IP
** push //leaveaddress// to stack
** push zi / zlim to stack
** next
* (+loop)
** add TOS to ZI
** perform step
* (loop)
** decrement ZI
** compare to ZLIM
** loop again? add //backward-branch// offset to IP
** no?  UNLOOP
* (unloop)






: endif   ( )
  ?comp
  2 ?pairs
  here over negate swap ! ;

: then   ( )
  endif ;

: if   ( -- here 2 )
  [compile] ?branch
  here 0 ,
  2 ;

: else   ( )
  2 ?pairs
  [compile] branch
  here 0 ,
  swap 2 endif
  2 ;

: do   ( )
  [compile] (do) here 3 ;



if
else
then

begin
again
until
while
repeat

do
?do
leave
?leave 
loop
+loop

(DO)

pdo
    sec             ; accomodate RTS +1
    ldy #2
    lda (ip),y      ; get leave-offset
    adc ip
    tay
    lda ip+1
    adc #0
    pha
    tya
    pha             ; leave address
