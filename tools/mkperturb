#!/bin/bash -x
# ~/pettil/tools/mkperturb
#
cd ~/pettil

for pettilobj in obj/pettil.prg?
do
    pettiladdr=$(dd  bs=1 count=2 conv=swab status=none <${pettilobj} | xxd -p)
    padr=$(echo "obase=10;ibase=16;${pettiladdr}"|bc)
    targetid=${pettilobj: -1}
    objsize=$(stat -c'%s' ${pettilobj})
    perturb=$(echo "${objsize} + ${padr}"|bc)
    badr=$(echo "obase=16;ibase=10;${perturb}"|bc)
    echo pettilobj: ${pettilobj}
    echo pettiladdr: ${pettiladdr}
    echo padr: ${padr}
    echo badr: ${badr}
    echo targetid: ${targetid}
    echo objsize: ${objsize}
    echo perturb: ${perturb}
    echo
    for tricks in $(ls -d src/perturb/*/)
    do
        cheese=$(basename ${tricks#*/})
        replicant="perturb-${cheese}"
        case ${targetid} in
            0)
                echo "my PET!"
                romopts=5
                hitop=6300
                ;;
            4)
                echo "VIC-20!"
                romopts=32
                hitop=6300
                ;;
        esac
        echo tricks: ${tricks}
        echo cheese: ${cheese}
        echo replicant: ${replicant}
        echo romopts: ${romopts}
        echo hitop: ${hitop}
        echo perturb: ${perturb}
        echo
#        foo=`echo "obase=10;ibase=16;$(hexdump -e '"%04x"' -n2 ${pettilobj})"|bc`
        pwd
        ls ./src/perturb/${cheese}/*.i65  ./tmp/perturb/${replicant}.a65
        cat ./src/perturb/${cheese}/*.i65> ./tmp/perturb/${replicant}.a65
        cd ./tmp/perturb/
        xa ${replicant}.a65                             \
            -DPERTURB=${replicant}                      \
            -DPERTURBORG=${perturb}                     \
            -DROM_OPTIONS=${romopts}                    \
            -DHITOP=${hitop}                            \
            -DSPECIALOPTS=${load}                       \
            -I ../../src/common/                        \
            -I ../                                      \
            -o ../../obj/perturb/${replicant}.prg${targetid}      \
            -e ../${replicant}.err${targetid}    \
            -l ../${replicant}.lab${targetid}    \
            -v
        cd -
#        c1541 -attach ../pettil.d64 -del ${replicant}.prg${targetid}
        dd bs=1 if=${pettilobj} of=tmp/t.1 skip=0 count=15 status=none
        echo -e -n "\x${badr:2:2}\x${badr:0:2}" > tmp/t.2
        dd bs=1 if=${pettilobj} of=tmp/t.3 skip=17 status=none
        cat tmp/t.1 tmp/t.2 tmp/t.3 obj/perturb/${replicant}.prg${targetid} \
            > obj/perturb/perturb-${cheese}.${targetid}
#        echo "AA" >> perturb/perturb-${cheese}.${targetid}
#        dd bs=1 if=${pettilobj} of=perturb/${cheese}.${targetid}            skip=15 count=2 status=none
#        dd if=${pettilobj} of=perturb/perturb-${cheese}.${targetid} bs=1 count=13
#        echo "AA" >> perturb/perturb-${cheese}.${targetid}
#        dd if=${pettilobj} of=perturb/perturb-${cheese}.${targetid} bs=1 count=13
        c1541                           \
            -attach ./pettil.d64       \
            -write obj/perturb/perturb-${cheese}.${targetid} \
            -dir
    done
done
echo +++ obj/ contents:
ls -laR obj/
echo +++ Y2 a hollow voice says
c1541                           \
    -attach ./pettil.d64       \
    -dir
exit















for pettilobj in obj/pettil.prg?
do
    load=$(dd  bs=1 count=2 conv=swab status=none <${pettilobj} | xxd -p)
    echo load addr ${load}
    targetid=${pettilobj: -1}
    echo "targetid $targetid"
#    pertub=$(echo "ibase=10;obase=16;$(echo `stat -c'%s' ${pettilobj}` "+" `echo "obase=10;ibase=16;$(hd -e '"%04x"' -n2 ${pettilobj})"|bc`|bc)"|bc)
    objsize=$(stat -c'%s' ${pettilobj})
    objaddr=$(echo "obase=10;ibase=16;$(hexdump -e '"%04x"' -n2 ${pettilobj})"|bc)
    perturb=$(echo "${objsize} + ${objaddr}"|bc)
    echo ${targetid} ${perturb} ${objsize} ${objaddr}
    for tricks in $(ls -d src/perturb/*/)
    do
        cheese=$(basename ${tricks#*/})
        replicant="perturb-${cheese}"
        foo=`echo "obase=10;ibase=16;$(hexdump -e '"%04x"' -n2 ${pettilobj})"|bc`
        echo derp ${tricks} derp ${cheese} derp ${replicant} derp ${foo}
        cat ./src/perturb/${cheese}/*.i65> ./tmp/perturb/${replicant}.a65
        ls ${tricks}
        pwd
        cd ./tmp/perturb/
        ls -la

        case ${targetid} in
            0)
                echo "wow! my PET!"
                romopts=5
                hitop=6400
                ;;
            4)
                echo "hey! VIC-20!"
                romopts=32
                load=1201
                hitop=6300
                ;;
        esac

#            cat ${replicant}.a65
echo before comment
: <<'ENDO'
removed './doc/sizes.txt'
'./tmp/sizes.csv' -> 'doc/sizes.csv4'
./tools/mkperturb
mkdir: created directory 'obj/perturb'
obj/pettil.prg0
18867 17842 1025
derp src/perturb/i/ derp i derp perturb-i derp
ENDO
echo after comment

#            cat ${replicant}.a65
        xa ${replicant}.a65                             \
            -DPERTURB=${replicant}                      \
            -DPERTURBORG=${perturb}                     \
            -DROM_OPTIONS=${romopts}                    \
            -DHITOP=${hitop}                            \
            -DSPECIALOPTS=${load}                       \
            -I ../common/                               \
            -I ../../tmp/                               \
            -o ../../obj/perturb/${replicant}.prg${targetid}      \
            -e ../../tmp/${replicant}.err${targetid}    \
            -l ../../tmp/${replicant}.lab${targetid}    \
            -v
        cd -
        pwd
        ls -la ./obj/perturb/${replicant}.prg${targetid}
        cd obj
#        c1541 -attach ../pettil.d64 -del ${replicant}.prg${targetid}
        c1541 -attach ../pettil.d64 -write ./perturb/${replicant}.prg${targetid}
   done
#            cat obj/pettil-core.obj${target}                                    \
#                tmp/${replicant}.obj${target} > obj/${replicant}.prg${target}
#            cd obj
#                c1541 -attach ../pettil.d64 -del ${replicant}.prg${target}
#                c1541 -attach ../pettil.d64 -write ${replicant}.prg${target}
#            cd ..
#            c1541 -attach pettil.d64 -dir

done

























if [ 1 -eq 0 ]; then

cd ~/pettil
for a in obj/pettil.prg?
do
    echo $a
done

fi

# cd pettil

# This script usually runs the test automation in the `at` queue.
echo you are not at Y2
    pwd
    mkdir -v obj/perturb
    c1541 -attach pettil.d64 -dir
    export DISPLAY=:0
    echo -----------------
    c1541 -attach pettil.d64 -del "perturb*" -dir
    for target in 0 4
    for pettilprg in obj/pettil.prg?
    do
        pettilfile=$(basename ${pettilprg#*/})
        echo "target $target"
      #sh ./tools/buildpettil.sh 0     5       6500  0401
          case $target in
            0)
                echo "hey! a PET!"
                romopts=5
                load=0401
                hitop=6400
                ;;
            4)
                echo "VIC-20!"
                romopts=32
                load=1201
                hitop=6400
                ;;
        esac
        echo "${romopts} ${load} ${hitop}"
        for suite in `ls -d ./src/perturb/*/`
        do
            cheese=$(basename ${suite#*/})
            replicant="perturb-${cheese}"
            foo=`echo "obase=10;ibase=16;$(hd -e '"%04x"' -n2 ./obj/pettil.prg${target})"|bc`
            echo replicant cheese
            echo $replicant $cheese $foo
            cat ./perturb/${cheese}/*.i65> ./tmp/perturb/${replicant}.a65

            cd ./tmp/perturb

            xa ${replicant}.a65                     \
                -DPERTURB=${replicant}              \
                -DROM_OPTIONS=${romopts}            \
                -DHITOP=${hitop}                   \
                -DSPECIALOPTS=${load}               \
                -I ../../src/common                 \
                -o ./${replicant}.obj${target}     \
                -e ./${replicant}.err${target}     \
                -l ./${replicant}.lab${target}     \
                -v
            cd -

#            cat obj/pettil-core.obj${target}                                    \
#                tmp/${replicant}.obj${target} > obj/${replicant}.prg${target}
            ls -la ./obj/${replicant}.prg${target}
#            cd obj
#                c1541 -attach ../pettil.d64 -del ${replicant}.prg${target}
#                c1541 -attach ../pettil.d64 -write ${replicant}.prg${target}
#            cd ..
#            c1541 -attach pettil.d64 -dir
        done
    done

    date -Iseconds >> perturb/perturb.log
    rm -v perturb/*.scrsh.png
    for object in obj/perturb-*.prg4
    do
        cheese=$(basename ${object#*/})
        extension="${cheese##*.}"
        namer="${cheese%.*}"
        echo "chintz ${object}\n${cheese}\n${namer}"
        cp -v obj/perturb.mon4 tmp/
        echo "bk E089\ncommand 9 \"scrsh \\\"perturb/${namer}.scrsh\\\" 2;quit\"\nkeybuf load\"${cheese}\",9\x0drun\x0d" >> tmp/perturb.mon4
        tail -9 tmp/perturb.mon4
        pwd
        /home/chitselb/bin/xvic \
         -verbose \
         -directory data/VIC20/ \
         -moncommand tmp/perturb.mon4 \
         -config data/sdl2_chitselb.vicerc \
         -warp \
         -8 chitselb.d64 \
         -9 pettil.d64
        if [ ! -f perturb/${namer}.match.png ]; then
            echo "🍅 ${namer}\t-- no match!" >> perturb/perturb.log
        fi
        diff -s -b perturb/${namer}.scrsh.png perturb/${namer}.match.png        \
        |sed 's/^.*-\([ivxlcdm]*\).*differ$/🍅 \1 \t\t-- different\!/'           \
        |sed 's/^.*-\([ivxlcdm]*\).*identical$/🥑 \1 \t\t...pass/'                                       \
        >> perturb/perturb.log
    done

    for object in perturb/perturb-*.match.png
    do
        cheese=$(basename ${object#*/})
        extension="${cheese#*.}"
        namer="${cheese%%.*}"
        if [ ! -f perturb/${namer}.scrsh.png ]; then
            echo "🍅 ${namer}\t-- no scrsh!" >> perturb/perturb.log
        fi
    done
    exit
