; perturb.a65
; this is an alternative take on pettil-studio.a65
; 00    zeropage
; 01    stack
; 02-03 system
; 04    pettil-core
; 1A    [ perturb | pettil-studio ]
; 36    [ perturb.sym | pettil.sym ]

#echo .       perturb.a65
#echo .       PETTIL Enthusiastic Regression Testing Usually Reduces Bugs

#include "options.i65"
#include "sweet16.i65"
#include "cbm.i65"
#include "../../tmp/pettil-core.def"

hitop=$HITOP
#print hitop

#ifdef ROM_OPTIONS
#echo "ROM OPTIONS" ROM_OPTIONS
#echo "(ROM OPTIONS & ROM PET CHITSELB)" (ROM_OPTIONS & ROM_PET_CHITSELB)
#echo "ROM PET CHITSELB & ROM OPTIONS" ROM_PET_CHITSELB & ROM_OPTIONS
#echo "ROM PET 4" ROM_PET_4
#echo "ROM PET UPGRADE" ROM_PET_UPGRADE
#echo "ROM VIC20" ROM_VIC20
#echo "ROM PET 80" ROM_PET_80
#echo "ROM C64" ROM_C64
#echo "ROM C16" ROM_C16
#echo "ROM C128" ROM_C128
#endif


* = fencepost

;--------------------------------------------------------------
#if 0
name=PERTURB
tags=system,test,nosymbol

#endif
perturb
    jsr qaloha
#include "align.i65"
    jsr toforth                 ; transition from 6502 Assembly to Forth
#include "page.i65"
    .word spstore
#include "pass.i65"
perturb01
    .word plit
    .word 36879
#include "page.i65"
    .word dup
#include "page.i65"
    .word fetch
#include "page.i65"
    .word oneplus
#include "page.i65"
    .word swap
#include "page.i65"
    .word cstore
#include "page.i65"
    .word qterminal
#include "pass.i65"
    .word qbranch
    .byt <(perturb01-*+1)
#include "pass.i65"
    .word $FFDF
